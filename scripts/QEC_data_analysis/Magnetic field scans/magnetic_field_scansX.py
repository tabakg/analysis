import numpy as np
import matplotlib.pyplot as plt
import measurement.scripts.lt2_scripts.setup.msmt_params as params
## 
### Data ### 

data = [0,	2.025316883909e+00,	8.153637726497e-06,	3.730050552228e+00,	8.103310841332e-06,	2.877683718069e+00,	1.166959621019e+01,	3.041667009831e+02,
200,		2.025132869833e+00,	7.583926932216e-06,	3.730365031720e+00,	5.841671151662e-06,	2.877748950777e+00,	1.340811416686e+01,	3.042625415921e+02,
400,		2.025039151694e+00,	7.956859086291e-06,	3.730595824374e+00,	6.313652522047e-06,	2.877817488034e+00,	1.501948764257e+01,	3.043276914450e+02,
600,		2.025040106124e+00,	6.496266857742e-06,	3.730786674120e+00,	5.346928125088e-06,	2.877913390122e+00,	1.702018963442e+01,	3.043717177717e+02,
800	, 		2.025034989662e+00,	7.659844958399e-06,	3.730976494841e+00,	6.071466200724e-06,	2.878005742252e+00,	1.874606137194e+01,	3.044162705612e+02,
1000, 		2.024991940078e+00,	7.265659434796e-06,	3.731229192250e+00,	6.694464768981e-06,	2.878110566164e+00,	2.052984291900e+01,	3.044801345505e+02,
800,		2.024966212039e+00,	8.249505120185e-06,	3.731051403219e+00,	6.370867919753e-06,	2.878008807629e+00,	1.880048450940e+01,	3.044422348331e+02,
600,		2.024956941989e+00,	7.623338628020e-06,	3.730865722483e+00,	6.240086532950e-06,	2.877911332236e+00,	1.697957411973e+01,	3.044004451427e+02,
400,		2.024984976251e+00,	9.530759421745e-06,	3.730666379783e+00,	5.517209356542e-06,	2.877825678017e+00,	1.520054151644e+01,	3.043508137020e+02,
200,		2.025061019270e+00,	7.480845808488e-06,	3.730431238378e+00,	5.912009730059e-06,	2.877746128824e+00,	1.333747949082e+01,	3.042868765901e+02,
0,			2.025185283557e+00,	8.338817714273e-06,	3.730166433998e+00,	7.427149161615e-06,	2.877675858778e+00,	1.144211246566e+01,	3.042100270867e+02,
-200,		2.025337923387e+00,	8.113472117860e-06,	3.729907884242e+00,	8.229266669812e-06,	2.877622903815e+00,	9.773827760239e+00,	3.041310641626e+02,
-400,		2.025584751371e+00,	8.323884188520e-06,	3.729560545382e+00,	7.979292107600e-06,	2.877572648376e+00,	7.869992815669e+00,	3.040197427644e+02,
-600,		2.025851943139e+00,	1.142713080543e-05,	3.729233006323e+00,	8.143318578947e-06,	2.877542474731e+00,	6.462804969857e+00,	3.039104453763e+02,
-800,		2.026204827208e+00,	9.262492264364e-06,	3.728816323077e+00,	7.901445711366e-06,	2.877510575142e+00,	4.521377075731e+00,	3.037697747102e+02,
-1000,		2.026553866760e+00,	1.017581640662e-05,	3.728443334761e+00,	8.455443251529e-06,	2.877498600760e+00,	3.526704268972e+00,	3.036396912481e+02,
-800,		2.026257542342e+00,	8.063461328075e-06,	3.728772425196e+00,	7.758527101340e-06,	2.877514983769e+00,	4.836401132730e+00,	3.037530029716e+02,
-600,		2.025924897697e+00,	9.101044596147e-06,	3.729148255074e+00,	8.904443601408e-06,	2.877536576386e+00,	6.150212065756e+00,	3.038816852425e+02,
-400,		2.025674815173e+00,	8.784142656530e-06,	3.729479436099e+00,	8.196573157353e-06,	2.877577125636e+00,	8.057990070788e+00,	3.039896754077e+02,
-200,		2.025445344581e+00,	9.691494559591e-06,	3.729799037978e+00,	7.370654371847e-06,	2.877622191280e+00,	9.749548931858e+00,	3.040924022110e+02,
0,			2.025276535688e+00,	8.503639490984e-06,	3.730060129471e+00,	6.491576119934e-06,	2.877668332580e+00,	1.122023563741e+01,	3.041739826523e+02]

'''
data = [0	,2.024897330949e+00,	9.409943661050e-06,	3.730083289360e+00,	7.233421928316e-06,	2.877490310155e+00,	2.625156888299e+00,	3.042269523957e+02,
200	,2.024617408921e+00,	7.723717198712e-06,	3.730389517681e+00,	6.521999744805e-06,	2.877503463301e+00,	3.960074446898e+00,	3.043329202178e+02,
400	,2.024296722769e+00,	1.011631204504e-05,	3.730774812804e+00,	7.691159254974e-06,	2.877535767787e+00,	6.104982222220e+00,	3.044622948974e+02,
200	,2.024567757594e+00,	1.004608406090e-05,	3.730460524545e+00,	8.987025171790e-06,	2.877514141070e+00,	4.776885176931e+00,	3.043555766693e+02,
0	,2.024896592653e+00,	1.052632086349e-05,	3.730097799130e+00,	7.095058060126e-06,	2.877497195892e+00,	3.390274878810e+00,	3.042304008567e+02,
-200	,2.025279956758e+00,	8.474548115589e-06,	3.729681243049e+00,	5.546474436253e-06,	2.877480599904e+00,	6.332604137005e-01,	3.040859307098e+02,
-400	,2.025666598042e+00,	8.431827880458e-06,	3.729332978131e+00,	7.700396863330e-06,	2.877499788087e+00,	3.637157928669e+00,	3.039568413915e+02,
-600	,2.026128324650e+00,	8.342042400145e-06,	3.728904728019e+00,	7.541911601877e-06,	2.877516526335e+00,	4.941806331785e+00,	3.037998248311e+02,
-400	,2.025665471704e+00,	8.827069572563e-06,	3.729316766685e+00,	7.758607040485e-06,	2.877491119195e+00,	2.726446443448e+00,	3.039532343001e+02,
-200	,2.025318982829e+00,	8.690699849782e-06,	3.729665259713e+00,	8.194515557988e-06,	2.877492121271e+00,	2.846540692544e+00,	3.040773338760e+02]

data = [0	,2.024926446417e+00,	7.030982725935e-06,	3.730068537271e+00,	6.380145579939e-06,	2.877497491844e+00,	3.419336279313e+00,	3.042198851385e+02,
300	,2.024439910820e+00,	9.526202183856e-06,	3.730632025487e+00,	6.484222803858e-06,	2.877535968153e+00,	6.116038512594e+00,	3.044112936300e+02,
600	,2.024054065088e+00,	9.599234270455e-06,	3.731129704519e+00,	6.615032335550e-06,	2.877591884804e+00,	8.647004919992e+00,	3.045748466555e+02,
300	,2.024323049067e+00,	8.876772318414e-06,	3.730770638127e+00,	6.373576095629e-06,	2.877546843597e+00,	6.683805019685e+00,	3.044580249208e+02,
0	,2.024846385019e+00,	8.244768219347e-06,	3.730180781466e+00,	6.518051546726e-06,	2.877513583243e+00,	4.737849096372e+00,	3.042558964330e+02,
-300	,2.025390235093e+00,	8.813855065968e-06,	3.729592795866e+00,	6.304281328128e-06,	2.877491515480e+00,	2.774519800883e+00,	3.040516290591e+02,
-600	,2.025990934388e+00,	7.181822505839e-06,	3.729008460496e+00,	6.048303895343e-06,	2.877499697442e+00,	3.628950566951e+00,	3.038410676018e+02,
-300	,2.025442995471e+00,	8.570930910366e-06,	3.729531695015e+00,	6.876523289609e-06,	2.877487345243e+00,	2.215912149785e+00,	3.040308741323e+02,
0	,2.024927284892e+00,	8.597657933219e-06,	3.730066159596e+00,	7.054165571690e-06,	2.877496722244e+00,	3.343269185445e+00,	3.042192299698e+02]
'''
xdata 	= np.zeros(len(data)/8)
f_msm 	= np.zeros(len(data)/8)
f_msm_u	= np.zeros(len(data)/8)
f_msp 	= np.zeros(len(data)/8)
f_msp_u = np.zeros(len(data)/8)
f_average = np.zeros(len(data)/8)
Bz = np.zeros(len(data)/8)
Bx = np.zeros(len(data)/8)

for i,j in enumerate(data):
	if i%8==0:
		xdata[i/8] = j
	if i%8==1:
		f_msm[(i-1)/8] = j
	if i%8==2:
		f_msm_u[(i-2)/8] = j
	if i%8==3:
		f_msp[(i-3)/8] = j
	if i%8==4:
		f_msp_u[(i-4)/8] = j
	if i%8==5:
		f_average[(i-5)/8] = j
	if i%8==6:
		Bx[(i-6)/8] = j
	if i%8==7:
		Bz[(i-7)/8] = j
print xdata

f_average_u = np.sqrt(f_msm_u**2 + f_msp_u**2)/2.

plt.figure(1)
plt.errorbar(xdata,(f_msm-2.02)*1e3, f_msm_u*1e3)
plt.title('f_msms in MHz + 2020')
plt.xlabel('magnet steps')

plt.figure(2)
plt.errorbar(xdata,(f_msp-3.72)*1e3, f_msp_u*1e3)
plt.title('f_msmp in MHz + 3720')
plt.xlabel('magnet steps')

plt.figure(3)
plt.errorbar(xdata,(f_average-2.877)*1e6,f_average_u*1e6)
plt.xlabel('magnet steps')
plt.title('f_average in KHz (-2.877 GHz)')
estimated_ZFS = params.cfg['samples']['Hans_sil1']['zero_field_splitting']
plt.plot(np.array([min(xdata),max(xdata)]),np.array([(estimated_ZFS-2.877e9)*1e-3,(estimated_ZFS-2.877e9)*1e-3]) )



plt.figure(4)
plt.plot(xdata,Bz)
plt.xlabel('magnet steps')
plt.title('Bz')

plt.figure(5)
plt.plot(xdata,Bx)
plt.title('Bx')
plt.xlabel('magnet steps')












































